image: tico/docker

stages:
  - build
  - deploy

.up: &up
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY

.tags: &tags
  tags:
    - docker

build-production:
  stage: build
  only:
    - master
  services:
    - docker:dind
  <<: *up
  script:
    - if [ "$BUILD_PRODUCTION" != "true" ]; then exit 0; fi
    #- docker build -f web.production.Dockerfile --build-arg DATABASE_URL=$PRODUCTION_DATABASE_URL --build-arg SECRET_KEY_BASE=$SECRET_KEY_BASE .
    - docker build -f web.production.Dockerfile -t $CI_REGISTRY_IMAGE:production --build-arg DATABASE_URL=$PRODUCTION_DATABASE_URL --build-arg SECRET_KEY_BASE=$SECRET_KEY_BASE .
    - docker push $CI_REGISTRY_IMAGE:production
  <<: *tags

build-staging:
  stage: build
  only:
    - staging
  services:
    - docker:dind
  <<: *up
  script:
    - if [ "$BUILD_STAGING" != "true" ]; then exit 0; fi
    #- docker build -f web.staging.Dockerfile --build-arg DATABASE_URL=$STAGING_DATABASE_URL --build-arg SECRET_KEY_BASE=$SECRET_KEY_BASE .
    - docker build -f web.staging.Dockerfile -t $CI_REGISTRY_IMAGE:staging --build-arg DATABASE_URL=$STAGING_DATABASE_URL --build-arg SECRET_KEY_BASE=$SECRET_KEY_BASE .
    - docker push $CI_REGISTRY_IMAGE:staging
  <<: *tags

deploy_production:
  stage: deploy
  only:
    - master
  variables:
    TARGET_BRANCH: master
    TARGET_HOST: ubuntu@13.229.109.27
    TARGET_PATH: /var/app/production_app
  environment:
    name: production
    url: https://docker.obook.co
  script:
    - cibu prepare-ssh
    - cibu compose login gitlab-ci-token $CI_JOB_TOKEN $CI_REGISTRY
    - scp /builds/$CI_PROJECT_PATH/docker-compose.production.yml $TARGET_HOST:$TARGET_PATH/docker-compose.yml
    - cibu compose pull
    - cibu compose update web
    - cibu compose up -d
    - cibu compose cleanup
  <<: *tags

deploy_staging:
  stage: deploy
  only:
    - staging
  variables:
    TARGET_BRANCH: staging
    TARGET_HOST: ubuntu@13.229.109.27
    TARGET_PATH: /var/app/staging_app
  environment:
    name: staging
    url: https://beta.obook.co
  script:
    - cibu prepare-ssh
    - cibu compose login gitlab-ci-token $CI_JOB_TOKEN $CI_REGISTRY
    - scp /builds/$CI_PROJECT_PATH/docker-compose.staging.yml $TARGET_HOST:$TARGET_PATH/docker-compose.yml
    - cibu compose pull
    - cibu compose update web
    - cibu compose up -d
    - cibu compose cleanup
  <<: *tags
